<?php

/**
 * @file
 * The OU json recipe importer.
 */

define('OU_BAGIT_IMPORTER_OBJECT_NAMESPACE', 'islandora');

/**
 * Creates/Updates a book collection.
 */
function ou_bagit_importer_save_book_collection($object_array, $json_recipe, $parent_collection) {
  $tuque = islandora_get_tuque_connection();
  $uuid = OU_BAGIT_IMPORTER_OBJECT_NAMESPACE . ":{$object_array['uuid']}";
  $islandora_object = islandora_object_load($uuid);
  $update = (bool) $json_recipe['update'];
  $content_models = array(
    $object_array['type'],
    'fedora-system:FedoraObject-3.0',
  );
  $new = TRUE;

  // Don't touch already imported objects unless running an update.
  if ($islandora_object && !$update) {
    drupal_set_message('Book collection object exists');
    return array(
      'object' => $object_array['uuid'],
      'result' => FALSE,
      'message' => 'Book collection object exists',
    );
  }
  elseif ($islandora_object) {
    $new = FALSE;
    // We're running an update.
  }

  // Set up islandora object.
  if (!$islandora_object) {
    $islandora_object = $tuque->repository->constructObject(OU_BAGIT_IMPORTER_OBJECT_NAMESPACE . ":{$object_array['uuid']}");
    $islandora_object->id = OU_BAGIT_IMPORTER_OBJECT_NAMESPACE . ":{$object_array['uuid']}";
    $islandora_object->state = 'A';
    $islandora_object->label = $object_array['label'];
    $islandora_object->ownerId = $user->name;
    foreach ($content_models as $content_model) {
      $islandora_object->relationships->add(FEDORA_MODEL_URI, 'hasModel', $content_model);
    }
    $islandora_object->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', $parent_collection);
  }
  else {
    $islandora_object->state = 'A';
    $islandora_object->label = $object_array['label'];
    $islandora_object->ownerId = $user->name;
  }


  $mods_record = ou_bagit_importer_run_xslt_transform(array(
    'input' => file_get_contents($object_array['metadata']['marcxml']),
    'xsl' => drupal_get_path('module', 'islandora_marcxml') . '/xsl/MARC21slim2MODS3-5.xsl',
  ));

  $dc_record = ou_bagit_importer_run_xslt_transform(array(
    'input' => $mods_record,
    'xsl' => drupal_get_path('module', 'islandora_batch') . '/transforms/mods_to_dc.xsl',
  ));

  $datastreams = array(
    'DC' => array(
      'type' => 'text/xml',
      'content' => $dc_record,
    ),
    'MODS' => array(
      'type' => 'text/xml',
      'content' => $mods_record,
    ),
  );

  if (!empty($object_array['metadata']['thumbnail'])) {
    $finfo = finfo_open(FILEINFO_MIME_TYPE);
    $datastreams['OBJ'] = array(
      'type' => finfo_file($finfo, drupal_realpath($object_array['metadata']['thumbnail'])),
      'content' => file_get_contents($object_array['metadata']['thumbnail']),
    );
    finfo_close($finfo);
  }

  foreach ($datastreams as $key => $value) {

    if (!$islandora_object[$key]) {
      $ds = $islandora_object->constructDatastream($key);
      $ds->label = $key;
      $ds->mimetype = $value['type'];
      $ds->control_group = 'M';
      $ds->setContentFromString($value['content']);
      $islandora_object->ingestDatastream($ds);
    }
    else {
      $ds = $islandora_object[$key];
      // Only update this datastream if it has changed.
      if (md5($ds->content) != md5($value['content'])) {
        $ds->label = $key;
        $ds->mimetype = $value['type'];
        $ds->control_group = 'M';
        $ds->setContentFromString($value['content']);
      }
    }
  }
  if ($new) {
    islandora_add_object($islandora_object);
  }
  return array(
    'object' => $islandora_object->id,
    'result' => TRUE,
    'message' => 'Successfully ingested/updated',
  );
}

/**
 * Creates/Updates a book page .
 */
function ou_bagit_importer_save_book_page($object_array, $json_recipe) {
  $tuque = islandora_get_tuque_connection();
  $uuid = OU_BAGIT_IMPORTER_OBJECT_NAMESPACE . ":" . $object_array['uuid'];
  $islandora_object = islandora_object_load($uuid);
  $update = (bool) $json_recipe['update'];
  $content_models = array(
    $object_array['type'],
  );
  $new = TRUE;
  if ($islandora_object && !$update) {
    drupal_set_message('Book page object exists');
    return array(
      'object' => $object_array['uuid'],
      'result' => FALSE,
      'message' => 'Book page object exists',
    );
  }
  elseif ($islandora_object) {
    $new = FALSE;
  }
  if (!$islandora_object) {
    $islandora_object = $tuque->repository->constructObject($uuid);
    $islandora_object->id = $uuid;
    $islandora_object->state = 'A';
    $islandora_object->label = $object_array['label'];
    $islandora_object->ownerId = $user->name;
    foreach ($content_models as $content_model) {
      $islandora_object->relationships->add(FEDORA_MODEL_URI, 'hasModel', $content_model);
    }
    $islandora_object->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOf', OU_BAGIT_IMPORTER_OBJECT_NAMESPACE . ':' . $object_array['book']);
    $islandora_object->relationships->add(ISLANDORA_RELS_EXT_URI, 'isPageOf', OU_BAGIT_IMPORTER_OBJECT_NAMESPACE . ':' . $object_array['book']);
    $islandora_object->relationships->add(ISLANDORA_RELS_EXT_URI, 'isSequenceNumber', $object_array['page_number']);
    $islandora_object->relationships->add(ISLANDORA_RELS_EXT_URI, 'isPageNumber', $object_array['page_number']);
    $islandora_object->relationships->add(ISLANDORA_RELS_EXT_URI, 'isSection', '1');
  }
  else {
    $islandora_object->state = 'A';
    $islandora_object->label = $object_array['label'];
    $islandora_object->ownerId = $user->name;
  }
  $datastreams = array();
  if (!empty($object_array['file'])) {
    $finfo = finfo_open(FILEINFO_MIME_TYPE);
    $datastreams['OBJ'] = array(
      'type' => finfo_file($finfo, drupal_realpath($object_array['file'])),
      'content' => file_get_contents($object_array['file']),
    );
    finfo_close($finfo);
  }
  if (!empty($object_array['exif'])) {
    $datastreams['EXIF'] = array(
      'type' => 'text/plain',
      'content' => file_get_contents($object_array['exif']),
    );
  }

  // Capture the MODS, DC data.
  $physical_desc_data = '';
  $copyright_data = 'Physical rights are retained by University of Oklahoma. Copyright is retained in accordance with U.S. copyright laws.';
  $mods_record = _ou_bagit_importer_generate_book_page_mods($islandora_object->label, $physical_desc_data, $copyright_data);
  $dc_record = ou_bagit_importer_run_xslt_transform(array(
    'input' => $mods_record,
    'xsl' => drupal_get_path('module', 'islandora_batch') . '/transforms/mods_to_dc.xsl',
  ));
  $datastreams['DC'] = array(
    'type' => 'text/xml',
    'content' => $dc_record,
  );
  $datastreams['MODS'] = array(
    'type' => 'text/xml',
    'content' => $mods_record,
  );

  foreach ($datastreams as $key => $value) {
    if (!$islandora_object[$key]) {
      $ds = $islandora_object->constructDatastream($key);
      $ds->label = $key;
      $ds->mimetype = $value['type'];
      $ds->control_group = 'M';
      $ds->setContentFromString($value['content']);
      $islandora_object->ingestDatastream($ds);
    }
    else {
      $ds = $islandora_object[$key];
      // Only update if the datastream has changed.
      if (md5($ds->content) != md5($value['content'])) {
        $ds->label = $key;
        $ds->mimetype = $value['type'];
        $ds->control_group = 'M';
        $ds->setContentFromString($value['content']);
      }
    }
  }

  if ($new) {
    islandora_add_object($islandora_object);
  }

  return array(
    'object' => $islandora_object->id,
    'result' => TRUE,
    'message' => 'Successfully ingested/updated',
  );
}

/**
 * Runs xslt transform on xml data.
 */
function ou_bagit_importer_run_xslt_transform($info) {
  $xsl = new DOMDocument();
  $xsl->load($info['xsl']);

  $input = new DOMDocument();
  $input->loadXML($info['input']);

  $processor = new XSLTProcessor();
  $processor->importStylesheet($xsl);

  if (isset($info['php_functions'])) {
    $processor->registerPHPFunctions($info['php_functions']);
  }

  // XXX: Suppressing warnings regarding unregistered prefixes.
  return $processor->transformToXML($input);
}

/**
 * Generate mods content for a book page.
 */
function _ou_bagit_importer_generate_book_page_mods($label, $physical_desc_data = NULL, $copyright_data = NULL) {
  $mods = '<?xml version="1.0"?>';
  $mods .= '<mods xmlns="http://www.loc.gov/mods/v3" xmlns:mods="http://www.loc.gov/mods/v3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink">';
  $mods .= "<titleInfo><title>{$label}</title><subTitle/></titleInfo>";
  if (!empty($physical_desc_data)) {
    // Do something.
    $mods .= "";
  }
  if (!empty($copyright_data)) {
    $mods .= "<accessCondition type='use and reproduction'>{$copyright_data}</accessCondition>";
  }
  $mods .= "</mods>";
  return $mods;
}
